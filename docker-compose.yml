version: '3.2'
services:
  postgres:
    image: "postgres:12"
    ports:
      - "5432:5432"
    volumes:
    - type: bind
      source: ./volumes/postgres
      target: /var/lib/postgresql/data
    environment:
        - POSTGRES_HOST_AUTH_METHOD=trust

  rskj:
    image: rsksmart/rskj:HOP-4.4.0
    ports:
      - "4444:4444"
      - "4445:4445"
    volumes:
      - type: bind
        source: ./volumes/rskj
        target: /etc/rsknode
      - ./docker/rskj/logback.xml:/etc/rsk/logback.xml
      - ./docker/rskj/node.conf:/etc/rsk/node.conf
      - ./docker/rskj/data:/var/lib/rsk/.rsk
  
  dev-ticker:
    build:
      context: .
      dockerfile: ./docker/dev-ticker/Dockerfile
    env_file:
      - ./etc/env/docker.env
    ports:
      - "9876:9876"
    volumes:
      - ./etc/tokens/:/etc/tokens
      
  tesseracts:
    image: "adria0/tesseracts"
    command: --cfg /tesseracts.toml -vvv
    ports:
      - "8000:8000"
    volumes:
    - ./etc/tesseracts/tesseracts.toml:/tesseracts.toml
    - type: bind
      source: ./volumes/tesseracts
      target: /var/lib/tesseracts/data

  elastic:
    image: elasticsearch:7.10.1
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
